akka{
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
}
my-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

my-blocking-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 1
}

//配置邮箱的方式一，通过调度器配置邮箱
prio-dispatcher {
  mailbox-type = "prac7.PrinterPrioMailBox"
  //Other dispatcher configuration goes here
}


//配置邮箱的方式二，通过Actor的名字配置邮箱
akka.actor.deployment {
  /priomailboxactor {
    mailbox = prio-mailbox
  }
}
prio-mailbox {
  mailbox-type = "prac7.PrinterPrioMailBox"
  //Other mailbox configuration goes here
}

//配置控制消息优先的邮箱
control-aware-dispatcher {
  mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  //Other dispatcher configuration goes here
}